[{"path":"https://seandavi.github.io/RefineBio/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 RefineBio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://seandavi.github.io/RefineBio/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Ho. Author, maintainer. Sean Davis. Author.","code":""},{"path":"https://seandavi.github.io/RefineBio/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ho , Davis S (2022). RefineBio: bridge refine.bio Bioconductor. R package version 0.3.0, https://seandavi.github.io/RefineBio.","code":"@Manual{,   title = {RefineBio: The bridge between refine.bio and Bioconductor},   author = {Alex Ho and Sean Davis},   year = {2022},   note = {R package version 0.3.0},   url = {https://seandavi.github.io/RefineBio}, }"},{"path":"https://seandavi.github.io/RefineBio/index.html","id":"refinebio","dir":"","previous_headings":"","what":"The bridge between refine.bio and Bioconductor","title":"The bridge between refine.bio and Bioconductor","text":"package bridges vast, homogeneously-processed transcriptomic data refine.bio Bioconductor. Cite refine.bio project :","code":"Casey S. Greene, Dongbo Hu, Richard W. W. Jones, Stephanie Liu, David S. Mejia, Rob Patro, Stephen R. Piccolo, Ariel Rodriguez Romero, Hirak Sarkar, Candace L. Savonen, Jaclyn N. Taroni, William E. Vauclain, Deepashree Venkatesh Prasad, Kurt G. Wheeler. refine.bio: a resource of uniformly processed publicly available gene expression datasets. URL: https://www.refine.bio"},{"path":"https://seandavi.github.io/RefineBio/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"The bridge between refine.bio and Bioconductor","text":"project undergoing active development meant general use.","code":""},{"path":"https://seandavi.github.io/RefineBio/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The bridge between refine.bio and Bioconductor","text":"","code":"install.packages('BiocManager') BiocManager::install('seandavi/RefineBio')"},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/index.html","id":"basic-search","dir":"","previous_headings":"","what":"Basic search","title":"The bridge between refine.bio and Bioconductor","text":"","code":"library(RefineBio) client = RefineBio::RefineBio() search_results = rb_search(client) search_results$count head(search_results$results) lapply(search_results$facets,head)"},{"path":"https://seandavi.github.io/RefineBio/index.html","id":"for-developers-the-low-level-api","dir":"","previous_headings":"","what":"For developers: the low level API","title":"The bridge between refine.bio and Bioconductor","text":"","code":"library(RefineBio) client = RefineBio() ops = rapiclient::get_operations(client) names(ops)"},{"path":"https://seandavi.github.io/RefineBio/reference/dot-facet_to_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn facet results into data.frame — .facet_to_data_frame","title":"Turn facet results into data.frame — .facet_to_data_frame","text":"Turn facet results data.frame","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/dot-facet_to_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn facet results into data.frame — .facet_to_data_frame","text":"","code":".facet_to_data_frame(facet_list)"},{"path":"https://seandavi.github.io/RefineBio/reference/dot-facet_to_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn facet results into data.frame — .facet_to_data_frame","text":"facet_list list() names representing facets values element representing count facet search result","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/dot-facet_to_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn facet results into data.frame — .facet_to_data_frame","text":"data.frame columns category count","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/dot-process_json_result.html","id":null,"dir":"Reference","previous_headings":"","what":"process the httr json response — .process_json_result","title":"process the httr json response — .process_json_result","text":"process httr json response","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/dot-process_json_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process the httr json response — .process_json_result","text":"","code":".process_json_result(result, encoding = \"UTF-8\", ...)"},{"path":"https://seandavi.github.io/RefineBio/reference/dot-process_json_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process the httr json response — .process_json_result","text":"result httr::response object body assumed json encoding character(1) encoding passed httr::content()","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/dot-refinebio_url.html","id":null,"dir":"Reference","previous_headings":"","what":"refinebio url — .refinebio_url","title":"refinebio url — .refinebio_url","text":"refinebio url","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/dot-refinebio_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"refinebio url — .refinebio_url","text":"","code":".refinebio_url"},{"path":"https://seandavi.github.io/RefineBio/reference/dot-refinebio_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"refinebio url — .refinebio_url","text":"object class character length 1.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_compendia_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all CompendiaResults with filtering. — rb_compendia_list","title":"List all CompendiaResults with filtering. — rb_compendia_list","text":"List CompendiaResults filtering.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_compendia_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all CompendiaResults with filtering. — rb_compendia_list","text":"","code":"rb_compendia_list(   primary_organism__name = NULL,   compendium_version = NULL,   quant_sf_only = NULL,   result__id = NULL,   ordering = NULL,   limit = NULL,   offset = NULL,   latest_version = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_compendia_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all CompendiaResults with filtering. — rb_compendia_list","text":"primary_organism__name string compendium_version number quant_sf_only boolean True RNA-seq Sample Compendium results False quantile normalized. result__id number ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results. latest_version boolean True return highest compendium_version primary_organism.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_compendia_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a specific Compendium Result — rb_compendia_read","title":"Get a specific Compendium Result — rb_compendia_read","text":"Get specific Compendium Result","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_compendia_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a specific Compendium Result — rb_compendia_read","text":"","code":"rb_compendia_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_compendia_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a specific Compendium Result — rb_compendia_read","text":"id integer unique integer value identifying compendium result. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computational_results_list.html","id":null,"dir":"Reference","previous_headings":"","what":"This lists all ComputationalResult. Each one contains meta-information about the output of a computer process. (Ex Salmon). — rb_computational_results_list","title":"This lists all ComputationalResult. Each one contains meta-information about the output of a computer process. (Ex Salmon). — rb_computational_results_list","text":"can return valid S3 urls valid token sent header HTTP_API_KEY.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computational_results_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This lists all ComputationalResult. Each one contains meta-information about the output of a computer process. (Ex Salmon). — rb_computational_results_list","text":"","code":"rb_computational_results_list(   processor__id = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computational_results_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This lists all ComputationalResult. Each one contains meta-information about the output of a computer process. (Ex Salmon). — rb_computational_results_list","text":"processor__id number limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computational_results_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a computational result by its ID — rb_computational_results_read","title":"Retrieves a computational result by its ID — rb_computational_results_read","text":"Retrieves computational result ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computational_results_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a computational result by its ID — rb_computational_results_read","text":"","code":"rb_computational_results_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computational_results_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a computational result by its ID — rb_computational_results_read","text":"id integer unique integer value identifying computational result. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computed_files_list.html","id":null,"dir":"Reference","previous_headings":"","what":"ComputedFiles are representation of files created by refinebio processes. — rb_computed_files_list","title":"ComputedFiles are representation of files created by refinebio processes. — rb_computed_files_list","text":"possible download one files providing valid token. acquire activate API key see documentation /token endpoint. valid token provided url sent back field download_url. Example:  endpoint can also used fetch compendia files generated :","code":"import requests import json headers = {     'Content-Type': 'application/json',     'API-KEY': token_id # requested from /token } requests.get('https://api.refine.bio/v1/computed_files/?id=5796866', {}, headers=headers) GET /computed_files?is_compendia=True&is_public=True"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computed_files_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ComputedFiles are representation of files created by refinebio processes. — rb_computed_files_list","text":"","code":"rb_computed_files_list(   id = NULL,   samples = NULL,   is_qn_target = NULL,   is_smashable = NULL,   is_qc = NULL,   is_compendia = NULL,   quant_sf_only = NULL,   svd_algorithm = NULL,   compendium_version = NULL,   created_at = NULL,   last_modified = NULL,   result__id = NULL,   ordering = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computed_files_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ComputedFiles are representation of files created by refinebio processes. — rb_computed_files_list","text":"id number samples string is_qn_target string is_smashable string is_qc string is_compendia string quant_sf_only string svd_algorithm string compendium_version number created_at string last_modified string result__id number ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computed_files_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a computed file by its ID — rb_computed_files_read","title":"Retrieves a computed file by its ID — rb_computed_files_read","text":"Retrieves computed file ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computed_files_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a computed file by its ID — rb_computed_files_read","text":"","code":"rb_computed_files_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_computed_files_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a computed file by its ID — rb_computed_files_read","text":"id integer unique integer value identifying computed file. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_create.html","id":null,"dir":"Reference","previous_headings":"","what":"View and modify a single Dataset. — rb_dataset_create","title":"View and modify a single Dataset. — rb_dataset_create","text":"View modify single Dataset.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View and modify a single Dataset. — rb_dataset_create","text":"","code":"rb_dataset_create(   id = NULL,   data = NULL,   aggregate_by = NULL,   scale_by = NULL,   is_processing = NULL,   is_processed = NULL,   is_available = NULL,   has_email = NULL,   email_address = NULL,   email_ccdl_ok = NULL,   notify_me = NULL,   expires_on = NULL,   s3_bucket = NULL,   s3_key = NULL,   success = NULL,   failure_reason = NULL,   created_at = NULL,   last_modified = NULL,   start = NULL,   size_in_bytes = NULL,   sha1 = NULL,   quantile_normalize = NULL,   quant_sf_only = NULL,   svd_algorithm = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View and modify a single Dataset. — rb_dataset_create","text":"id string data object dictionary keys experiment accession codes values lists sample accession codes. Eg: {'E-ABC-1': ['SAMP1', 'SAMP2']} aggregate_by string Specifies samples aggregated. scale_by string Specifies options transformations. is_processing boolean is_processed boolean is_available boolean has_email string email_address string email_ccdl_ok boolean notify_me boolean expires_on string s3_bucket string s3_key string success boolean failure_reason string created_at string last_modified string start boolean size_in_bytes integer Contains size bytes processed dataset. sha1 string quantile_normalize boolean Part advanced options. Allows skipping quantile normalization RNA-Seq samples. quant_sf_only boolean Include quant.sf files generated dataset. svd_algorithm string Specifies choice SVD algorithm","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_read.html","id":null,"dir":"Reference","previous_headings":"","what":"View a single Dataset. — rb_dataset_read","title":"View a single Dataset. — rb_dataset_read","text":"View single Dataset.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View a single Dataset. — rb_dataset_read","text":"","code":"rb_dataset_read(details = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View a single Dataset. — rb_dataset_read","text":"details boolean set True, additional fields included response details experiments dataset. used mostly dataset page www.refine.bio","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify an existing Dataset. — rb_dataset_update","title":"Modify an existing Dataset. — rb_dataset_update","text":"order begin smashing, activated API key must provided API-KEY header field request. acquire activate API key see documentation /token endpoint.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify an existing Dataset. — rb_dataset_update","text":"","code":"rb_dataset_update(   id = NULL,   data = NULL,   aggregate_by = NULL,   scale_by = NULL,   is_processing = NULL,   is_processed = NULL,   is_available = NULL,   has_email = NULL,   email_address = NULL,   email_ccdl_ok = NULL,   notify_me = NULL,   expires_on = NULL,   s3_bucket = NULL,   s3_key = NULL,   success = NULL,   failure_reason = NULL,   created_at = NULL,   last_modified = NULL,   start = NULL,   size_in_bytes = NULL,   sha1 = NULL,   quantile_normalize = NULL,   quant_sf_only = NULL,   svd_algorithm = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify an existing Dataset. — rb_dataset_update","text":"id string data object dictionary keys experiment accession codes values lists sample accession codes. Eg: {'E-ABC-1': ['SAMP1', 'SAMP2']} aggregate_by string Specifies samples aggregated. scale_by string Specifies options transformations. is_processing boolean is_processed boolean is_available boolean has_email string email_address string email_ccdl_ok boolean notify_me boolean expires_on string s3_bucket string s3_key string success boolean failure_reason string created_at string last_modified string start boolean size_in_bytes integer Contains size bytes processed dataset. sha1 string quantile_normalize boolean Part advanced options. Allows skipping quantile normalization RNA-Seq samples. quant_sf_only boolean Include quant.sf files generated dataset. svd_algorithm string Specifies choice SVD algorithm","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_dataset_update.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modify an existing Dataset. — rb_dataset_update","text":"","code":"import requests import json  params = json.dumps({     'data': data,     'aggregate_by': 'EXPERIMENT',     'start': True,     'email_address': 'refinebio@gmail.com' }) headers = {     'Content-Type': 'application/json',     'API-KEY': token_id # requested from /token } requests.put(host + '/v1/dataset/38879729-93c8-436d-9293-b95d3f274741/', params, headers=headers)"},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_experiments_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Paginated list of all experiments. Advanced filtering can be done with the /search endpoint. — rb_experiments_list","title":"Paginated list of all experiments. Advanced filtering can be done with the /search endpoint. — rb_experiments_list","text":"Paginated list experiments. Advanced filtering can done /search endpoint.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_experiments_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paginated list of all experiments. Advanced filtering can be done with the /search endpoint. — rb_experiments_list","text":"","code":"rb_experiments_list(   title = NULL,   description = NULL,   accession_code = NULL,   alternate_accession_code = NULL,   source_database = NULL,   source_url = NULL,   has_publication = NULL,   publication_title = NULL,   publication_doi = NULL,   pubmed_id = NULL,   organisms = NULL,   submitter_institution = NULL,   created_at = NULL,   last_modified = NULL,   source_first_published = NULL,   source_last_modified = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_experiments_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paginated list of all experiments. Advanced filtering can be done with the /search endpoint. — rb_experiments_list","text":"title string description string accession_code string alternate_accession_code string source_database string source_url string has_publication string publication_title string publication_doi string pubmed_id string organisms string submitter_institution string created_at string last_modified string source_first_published string source_last_modified string limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_experiments_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve details for an experiment given it's accession code — rb_experiments_read","title":"Retrieve details for an experiment given it's accession code — rb_experiments_read","text":"Retrieve details experiment given accession code","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_experiments_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve details for an experiment given it's accession code — rb_experiments_read","text":"","code":"rb_experiments_read(accession_code)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_experiments_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve details for an experiment given it's accession code — rb_experiments_read","text":"accession_code string  (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_get_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Low level api client accessor — rb_get_client","title":"Low level api client accessor — rb_get_client","text":"function accessor refine.bio API. first access, rapiclient-based client built returned. subsequent calls, client fetched environment-based cache.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_get_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low level api client accessor — rb_get_client","text":"","code":"rb_get_client(url = .refinebio_url, renew = FALSE, ...)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_get_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low level api client accessor — rb_get_client","text":"url character(1) url refine bio API root, default .refinebio_url renew logical(1) TRUE reconnect rebuild API client, ... passed directly rapiclient::get_api()","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_get_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low level api client accessor — rb_get_client","text":"","code":"client = RefineBio() #> Error in RefineBio(): could not find function \"RefineBio\"  # operations ops = rapiclient::get_operations(client) #> Error in get_operation_definitions(api, path): object 'client' not found"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_institutions_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpaginated list of all the available ","title":"Unpaginated list of all the available ","text":"Unpaginated list available \"institution\" information","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_institutions_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpaginated list of all the available ","text":"","code":"rb_institutions_list()"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_downloader_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of all DownloaderJob — rb_jobs_downloader_list","title":"List of all DownloaderJob — rb_jobs_downloader_list","text":"List DownloaderJob","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_downloader_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of all DownloaderJob — rb_jobs_downloader_list","text":"","code":"rb_jobs_downloader_list(   id = NULL,   downloader_task = NULL,   ram_amount = NULL,   num_retries = NULL,   retried = NULL,   was_recreated = NULL,   worker_id = NULL,   worker_version = NULL,   batch_job_id = NULL,   batch_job_queue = NULL,   failure_reason = NULL,   success = NULL,   original_files = NULL,   start_time = NULL,   end_time = NULL,   created_at = NULL,   last_modified = NULL,   ordering = NULL,   limit = NULL,   offset = NULL,   sample_accession_code = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_downloader_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of all DownloaderJob — rb_jobs_downloader_list","text":"id number downloader_task string ram_amount number num_retries number retried string was_recreated string worker_id string worker_version string batch_job_id string batch_job_queue string failure_reason string success string original_files string start_time string end_time string created_at string last_modified string ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results. sample_accession_code string List downloader jobs associated sample","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_downloader_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a DownloaderJob by ID — rb_jobs_downloader_read","title":"Retrieves a DownloaderJob by ID — rb_jobs_downloader_read","text":"Retrieves DownloaderJob ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_downloader_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a DownloaderJob by ID — rb_jobs_downloader_read","text":"","code":"rb_jobs_downloader_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_downloader_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a DownloaderJob by ID — rb_jobs_downloader_read","text":"id integer unique integer value identifying downloader job. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_processor_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of all ProcessorJobs. — rb_jobs_processor_list","title":"List of all ProcessorJobs. — rb_jobs_processor_list","text":"List ProcessorJobs.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_processor_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of all ProcessorJobs. — rb_jobs_processor_list","text":"","code":"rb_jobs_processor_list(   id = NULL,   pipeline_applied = NULL,   num_retries = NULL,   retried = NULL,   worker_id = NULL,   ram_amount = NULL,   volume_index = NULL,   batch_job_queue = NULL,   worker_version = NULL,   failure_reason = NULL,   batch_job_id = NULL,   success = NULL,   original_files = NULL,   datasets = NULL,   start_time = NULL,   end_time = NULL,   created_at = NULL,   last_modified = NULL,   ordering = NULL,   limit = NULL,   offset = NULL,   sample_accession_code = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_processor_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of all ProcessorJobs. — rb_jobs_processor_list","text":"id number pipeline_applied string num_retries number retried string worker_id string ram_amount number volume_index string batch_job_queue string worker_version string failure_reason string batch_job_id string success string original_files string datasets string start_time string end_time string created_at string last_modified string ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results. sample_accession_code string List processor jobs associated sample","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_processor_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a ProcessorJob by ID — rb_jobs_processor_read","title":"Retrieves a ProcessorJob by ID — rb_jobs_processor_read","text":"Retrieves ProcessorJob ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_processor_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a ProcessorJob by ID — rb_jobs_processor_read","text":"","code":"rb_jobs_processor_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_processor_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a ProcessorJob by ID — rb_jobs_processor_read","text":"id integer unique integer value identifying processor job. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_survey_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List of all SurveyJob. — rb_jobs_survey_list","title":"List of all SurveyJob. — rb_jobs_survey_list","text":"List SurveyJob.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_survey_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of all SurveyJob. — rb_jobs_survey_list","text":"","code":"rb_jobs_survey_list(   id = NULL,   source_type = NULL,   success = NULL,   batch_job_id = NULL,   batch_job_queue = NULL,   ram_amount = NULL,   start_time = NULL,   end_time = NULL,   created_at = NULL,   last_modified = NULL,   ordering = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_survey_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List of all SurveyJob. — rb_jobs_survey_list","text":"id number source_type string success string batch_job_id string batch_job_queue string ram_amount number start_time string end_time string created_at string last_modified string ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_survey_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a SurveyJob by ID — rb_jobs_survey_read","title":"Retrieves a SurveyJob by ID — rb_jobs_survey_read","text":"Retrieves SurveyJob ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_survey_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a SurveyJob by ID — rb_jobs_survey_read","text":"","code":"rb_jobs_survey_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_jobs_survey_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a SurveyJob by ID — rb_jobs_survey_read","text":"id integer unique integer value identifying survey job. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available organisms from refine.bio — rb_organisms","title":"List all available organisms from refine.bio — rb_organisms","text":"List available organisms refine.bio","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available organisms from refine.bio — rb_organisms","text":"","code":"rb_organisms(client = RefineBio::RefineBio())"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available organisms from refine.bio — rb_organisms","text":"data.frame four columns: name taxonomy_id has_compendia has_quantfile_compendia","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all available organisms from refine.bio — rb_organisms","text":"","code":"rb_orgs = rb_organisms() #> Error: 'RefineBio' is not an exported object from 'namespace:RefineBio' head(rb_orgs) #> Error in head(rb_orgs): object 'rb_orgs' not found  table(rb_orgs$has_compendia) #> Error in table(rb_orgs$has_compendia): object 'rb_orgs' not found table(rb_orgs$has_quantfile_compendia) #> Error in table(rb_orgs$has_quantfile_compendia): object 'rb_orgs' not found"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Paginated list of all the available organisms. — rb_organisms_list","title":"Paginated list of all the available organisms. — rb_organisms_list","text":"Paginated list available organisms.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paginated list of all the available organisms. — rb_organisms_list","text":"","code":"rb_organisms_list(   has_compendia = NULL,   has_quantfile_compendia = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paginated list of all the available organisms. — rb_organisms_list","text":"has_compendia string has_quantfile_compendia string limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves an organism by its name. — rb_organisms_read","title":"Retrieves an organism by its name. — rb_organisms_read","text":"Retrieves organism name.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves an organism by its name. — rb_organisms_read","text":"","code":"rb_organisms_read(name)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_organisms_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves an organism by its name. — rb_organisms_read","text":"name string  (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_original_files_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List Original Files that are associated with Samples. These are the files we proccess. — rb_original_files_list","title":"List Original Files that are associated with Samples. These are the files we proccess. — rb_original_files_list","text":"List Original Files associated Samples. files proccess.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_original_files_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Original Files that are associated with Samples. These are the files we proccess. — rb_original_files_list","text":"","code":"rb_original_files_list(   id = NULL,   filename = NULL,   samples = NULL,   processor_jobs = NULL,   downloader_jobs = NULL,   size_in_bytes = NULL,   sha1 = NULL,   source_url = NULL,   is_archive = NULL,   source_filename = NULL,   has_raw = NULL,   created_at = NULL,   last_modified = NULL,   ordering = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_original_files_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Original Files that are associated with Samples. These are the files we proccess. — rb_original_files_list","text":"id number filename string samples string processor_jobs string downloader_jobs string size_in_bytes number sha1 string source_url string is_archive string source_filename string has_raw string created_at string last_modified string ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_original_files_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves an Original File by its ID — rb_original_files_read","title":"Retrieves an Original File by its ID — rb_original_files_read","text":"Retrieves Original File ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_original_files_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves an Original File by its ID — rb_original_files_read","text":"","code":"rb_original_files_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_original_files_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves an Original File by its ID — rb_original_files_read","text":"id integer unique integer value identifying original file. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_platforms.html","id":null,"dir":"Reference","previous_headings":"","what":"List all available platforms from refine.bio — rb_platforms","title":"List all available platforms from refine.bio — rb_platforms","text":"List available platforms refine.bio","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_platforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all available platforms from refine.bio — rb_platforms","text":"","code":"rb_platforms(client = RefineBio::RefineBio())"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_platforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all available platforms from refine.bio — rb_platforms","text":"2-column data.frame","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_platforms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all available platforms from refine.bio — rb_platforms","text":"","code":"plats = rb_platforms() #> Error: 'RefineBio' is not an exported object from 'namespace:RefineBio' head(plats) #> Error in head(plats): object 'plats' not found"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_platforms_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpaginated list of all the available ","title":"Unpaginated list of all the available ","text":"Unpaginated list available \"platform\" information","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_platforms_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpaginated list of all the available ","text":"","code":"rb_platforms_list()"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_processors_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all processors. — rb_processors_list","title":"List all processors. — rb_processors_list","text":"List processors.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_processors_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all processors. — rb_processors_list","text":"","code":"rb_processors_list(limit = NULL, offset = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_processors_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all processors. — rb_processors_list","text":"limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_processors_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves a processor by its ID — rb_processors_read","title":"Retrieves a processor by its ID — rb_processors_read","text":"Retrieves processor ID","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_processors_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves a processor by its ID — rb_processors_read","text":"","code":"rb_processors_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_processors_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves a processor by its ID — rb_processors_read","text":"id integer unique integer value identifying processor. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_qn_targets_list.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a list of all of the organisms which have available QN Targets — rb_qn_targets_list","title":"This is a list of all of the organisms which have available QN Targets — rb_qn_targets_list","text":"list organisms available QN Targets","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_qn_targets_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a list of all of the organisms which have available QN Targets — rb_qn_targets_list","text":"","code":"rb_qn_targets_list()"},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_qn_targets_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a detailed view of the Quantile Normalization file for an organism. — rb_qn_targets_read","title":"Get a detailed view of the Quantile Normalization file for an organism. — rb_qn_targets_read","text":"Get detailed view Quantile Normalization file organism.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_qn_targets_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a detailed view of the Quantile Normalization file for an organism. — rb_qn_targets_read","text":"","code":"rb_qn_targets_read(organism_name)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_qn_targets_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a detailed view of the Quantile Normalization file for an organism. — rb_qn_targets_read","text":"organism_name string Eg DANIO_RERIO, MUS_MUSCULUS (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_samples_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns detailed information about Samples — rb_samples_list","title":"Returns detailed information about Samples — rb_samples_list","text":"Returns detailed information Samples","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_samples_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns detailed information about Samples — rb_samples_list","text":"","code":"rb_samples_list(   ordering = NULL,   title = NULL,   organism = NULL,   source_database = NULL,   source_archive_url = NULL,   has_raw = NULL,   platform_name = NULL,   technology = NULL,   manufacturer = NULL,   sex = NULL,   age = NULL,   specimen_part = NULL,   genotype = NULL,   disease = NULL,   disease_stage = NULL,   cell_line = NULL,   treatment = NULL,   race = NULL,   subject = NULL,   compound = NULL,   time = NULL,   is_processed = NULL,   is_unable_to_be_processed = NULL,   is_public = NULL,   limit = NULL,   offset = NULL,   dataset_id = NULL,   experiment_accession_code = NULL,   accession_codes = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_samples_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns detailed information about Samples — rb_samples_list","text":"ordering string field use ordering results. title string organism string source_database string source_archive_url string has_raw string platform_name string technology string manufacturer string sex string age number specimen_part string genotype string disease string disease_stage string cell_line string treatment string race string subject string compound string time string is_processed string is_unable_to_be_processed string is_public string limit integer Number results return per page. offset integer initial index return results. dataset_id string Filters result returns samples added dataset. experiment_accession_code string Filters result returns samples associated experiment accession code. accession_codes string Provide list sample accession codes separated commas endpoint return information samples.","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_samples_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the details for a Sample given its accession code — rb_samples_read","title":"Retrieve the details for a Sample given its accession code — rb_samples_read","text":"Retrieve details Sample given accession code","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_samples_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the details for a Sample given its accession code — rb_samples_read","text":"","code":"rb_samples_read(accession_code)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_samples_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the details for a Sample given its accession code — rb_samples_read","text":"accession_code string  (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a search against refine.bio api — rb_search","title":"Perform a search against refine.bio api — rb_search","text":"Perform search refine.bio api","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a search against refine.bio api — rb_search","text":"","code":"rb_search(client, ...)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a search against refine.bio api — rb_search","text":"id integer(1) ID search technology character() vector technologies search has_publiction logical(1) filter records associated publications accession_code character() vector accessions alternate_accession_ccode character() vector alternate accession codes platform character() vector platforms include organism character() vector organisms include downloadable_organism character() vector organisms data available download num_processed_samples integer() number processed samples sample_keywords character() vector sample keywords include ordering character() field use ordering results search character(1) Search title, publication_authors, sample_keywords, publication_title, submitter_institution, description, accession_code, alternate_accession_code, publication_doi, pubmed_id, sample_metadata_fields, platform_names. limit integer(1) number results return per page offset integer(1) initial offset return results total integer(1) total number records return","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a search against refine.bio api — rb_search","text":"","code":"client = RefineBio::RefineBio() #> Error: 'RefineBio' is not an exported object from 'namespace:RefineBio'  sres = rb_search(client, search=\"medulloblastoma\") #> Error in get_operation_definitions(api, path): object 'client' not found sres$count #> Error in eval(expr, envir, enclos): object 'sres' not found head(sres$results,4) #> Error in head(sres$results, 4): object 'sres' not found lapply(sres$facets,head) #> Error in lapply(sres$facets, head): object 'sres' not found"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Use this endpoint to search among the experiments. — rb_search_list","title":"Use this endpoint to search among the experiments. — rb_search_list","text":"powered ElasticSearch, information regarding advanced usages filters can found Django-ES-DSL-DRF docs","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use this endpoint to search among the experiments. — rb_search_list","text":"","code":"rb_search_list(   id = NULL,   technology = NULL,   has_publication = NULL,   accession_code = NULL,   alternate_accession_code = NULL,   platform = NULL,   organism = NULL,   downloadable_organism = NULL,   num_processed_samples = NULL,   num_downloadable_samples = NULL,   sample_keywords = NULL,   ordering = NULL,   search = NULL,   limit = NULL,   offset = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use this endpoint to search among the experiments. — rb_search_list","text":"id number technology string Allows filtering results technology, can multiple values. Eg: ?technology=microarray&technology=rna-seq has_publication string Filter results associated publications ?has_publication=true accession_code string Allows filtering results accession code, can multiple values. Eg: ?accession_code=microarray&accession_code=rna-seq alternate_accession_code string platform string Allows filtering results platform, parameter can multiple values. organism string Allows filtering results organism, parameter can multiple values. downloadable_organism string num_processed_samples number Use ElasticSearch queries specify number processed samples results num_downloadable_samples number sample_keywords string ordering string field use ordering results. search string Search title, publication_authors, sample_keywords, publication_title, submitter_institution, description, accession_code, alternate_accession_code, publication_doi, pubmed_id, sample_metadata_fields, platform_names. limit integer Number results return per page. offset integer initial index return results.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_search_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use this endpoint to search among the experiments. — rb_search_list","text":"additional field response named facets contain stats number results per filter type. Example Requests: endpoint also accepts POST requests larger queries. filters accepted query parameters also accepted JSON object request body. Example Requests (tests):","code":"?search=medulloblastoma ?id=1 ?search=medulloblastoma&technology=microarray&has_publication=true ?ordering=source_first_published import requests import json  headers = {     'Content-Type': 'application/json', }  # Basic filter search = {\"accession_code\": \"GSE123\"} requests.post(host + '/v1/search/', json.dumps(search), headers=headers)  # __in filter search = {\"accession_code__in\": [\"GSE123\"]} requests.post(host + '/v1/search/', json.dumps(search), headers=headers)  # numeric filter search = {\"num_downloadable_samples__gt\": 0} requests.post(host + '/v1/search/', json.dumps(search), headers=headers)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_failures_downloader_list.html","id":null,"dir":"Reference","previous_headings":"","what":"API endpoint stats_failures_downloader_list — rb_stats_failures_downloader_list","title":"API endpoint stats_failures_downloader_list — rb_stats_failures_downloader_list","text":"API endpoint stats_failures_downloader_list","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_failures_downloader_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API endpoint stats_failures_downloader_list — rb_stats_failures_downloader_list","text":"","code":"rb_stats_failures_downloader_list(range = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_failures_downloader_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"API endpoint stats_failures_downloader_list — rb_stats_failures_downloader_list","text":"range string Specify range calculate possible options","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_failures_processor_list.html","id":null,"dir":"Reference","previous_headings":"","what":"API endpoint stats_failures_processor_list — rb_stats_failures_processor_list","title":"API endpoint stats_failures_processor_list — rb_stats_failures_processor_list","text":"API endpoint stats_failures_processor_list","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_failures_processor_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API endpoint stats_failures_processor_list — rb_stats_failures_processor_list","text":"","code":"rb_stats_failures_processor_list(range = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_failures_processor_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"API endpoint stats_failures_processor_list — rb_stats_failures_processor_list","text":"range string Specify range calculate possible options","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistics about the health of the system. — rb_stats_list","title":"Statistics about the health of the system. — rb_stats_list","text":"Statistics health system.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistics about the health of the system. — rb_stats_list","text":"","code":"rb_stats_list(range = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_stats_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistics about the health of the system. — rb_stats_list","text":"range string Specify range calculate possible options","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_create.html","id":null,"dir":"Reference","previous_headings":"","what":"This endpoint can be used to create and activate tokens. These tokens can be used\nin requests that provide urls to download computed files. Setting is_activated to\ntrue indicates agreement with refine.bio's Terms of Use\nand Privacy Policy. — rb_token_create","title":"This endpoint can be used to create and activate tokens. These tokens can be used\nin requests that provide urls to download computed files. Setting is_activated to\ntrue indicates agreement with refine.bio's Terms of Use\nand Privacy Policy. — rb_token_create","text":"","code":"import requests import json"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This endpoint can be used to create and activate tokens. These tokens can be used\nin requests that provide urls to download computed files. Setting is_activated to\ntrue indicates agreement with refine.bio's Terms of Use\nand Privacy Policy. — rb_token_create","text":"","code":"rb_token_create(id = NULL, is_activated = NULL, terms_and_conditions = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This endpoint can be used to create and activate tokens. These tokens can be used\nin requests that provide urls to download computed files. Setting is_activated to\ntrue indicates agreement with refine.bio's Terms of Use\nand Privacy Policy. — rb_token_create","text":"id string is_activated boolean terms_and_conditions string","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This endpoint can be used to create and activate tokens. These tokens can be used\nin requests that provide urls to download computed files. Setting is_activated to\ntrue indicates agreement with refine.bio's Terms of Use\nand Privacy Policy. — rb_token_create","text":"response = requests.post('https://api.refine.bio/v1/token/') token_id = response.json()['id'] response = requests.put('https://api.refine.bio/v1/token/' + token_id + '/', json.dumps('is_activated': True), headers='Content-Type': 'application/json')","code":"The token id needs to be provided in the HTTP request in the API-KEY header.  References - [https://github.com/AlexsLemonade/refinebio/issues/731]() - [https://github.com/AlexsLemonade/refinebio-frontend/issues/560]()  ['id']: R:'id' [https://github.com/AlexsLemonade/refinebio/issues/731]: R:https://github.com/AlexsLemonade/refinebio/issues/731 [https://github.com/AlexsLemonade/refinebio-frontend/issues/560]: R:https://github.com/AlexsLemonade/refinebio-frontend/issues/560"},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Return details about a specific token. — rb_token_read","title":"Return details about a specific token. — rb_token_read","text":"Return details specific token.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return details about a specific token. — rb_token_read","text":"","code":"rb_token_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return details about a specific token. — rb_token_read","text":"id string UUID string identifying api token. (required)","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_update.html","id":null,"dir":"Reference","previous_headings":"","what":"This can be used to activate a specific token by sending is_activated: true.\nSetting is_activated to true indicates agreement with refine.bio's\nTerms of Use and\nPrivacy Policy. — rb_token_update","title":"This can be used to activate a specific token by sending is_activated: true.\nSetting is_activated to true indicates agreement with refine.bio's\nTerms of Use and\nPrivacy Policy. — rb_token_update","text":"can used activate specific token sending is_activated: true. Setting is_activated true indicates agreement refine.bio's Terms Use Privacy Policy.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This can be used to activate a specific token by sending is_activated: true.\nSetting is_activated to true indicates agreement with refine.bio's\nTerms of Use and\nPrivacy Policy. — rb_token_update","text":"","code":"rb_token_update(id = NULL, is_activated = NULL, terms_and_conditions = NULL)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_token_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This can be used to activate a specific token by sending is_activated: true.\nSetting is_activated to true indicates agreement with refine.bio's\nTerms of Use and\nPrivacy Policy. — rb_token_update","text":"id string is_activated boolean terms_and_conditions string","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_transcriptome_indices_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all Transcriptome Indices. These are a special type of process result,\nnecessary for processing other SRA samples. — rb_transcriptome_indices_list","title":"List all Transcriptome Indices. These are a special type of process result,\nnecessary for processing other SRA samples. — rb_transcriptome_indices_list","text":"List Transcriptome Indices. special type process result, necessary processing SRA samples.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_transcriptome_indices_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all Transcriptome Indices. These are a special type of process result,\nnecessary for processing other SRA samples. — rb_transcriptome_indices_list","text":"","code":"rb_transcriptome_indices_list(   salmon_version = NULL,   index_type = NULL,   ordering = NULL,   limit = NULL,   offset = NULL,   organism__name = NULL,   length = NULL )"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_transcriptome_indices_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all Transcriptome Indices. These are a special type of process result,\nnecessary for processing other SRA samples. — rb_transcriptome_indices_list","text":"salmon_version string Eg. salmon 0.13.1 index_type string Eg. TRANSCRIPTOME_LONG ordering string field use ordering results. limit integer Number results return per page. offset integer initial index return results. organism__name string Organism name. Eg. MUS_MUSCULUS length string Short hand index_type Eg. short long","code":""},{"path":[]},{"path":"https://seandavi.github.io/RefineBio/reference/rb_transcriptome_indices_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the S3 url associated with the organism and length, along with other metadata about\nthe transcriptome index we have stored. — rb_transcriptome_indices_read","title":"Gets the S3 url associated with the organism and length, along with other metadata about\nthe transcriptome index we have stored. — rb_transcriptome_indices_read","text":"Gets S3 url associated organism length, along metadata transcriptome index stored.","code":""},{"path":"https://seandavi.github.io/RefineBio/reference/rb_transcriptome_indices_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the S3 url associated with the organism and length, along with other metadata about\nthe transcriptome index we have stored. — rb_transcriptome_indices_read","text":"","code":"rb_transcriptome_indices_read(id)"},{"path":"https://seandavi.github.io/RefineBio/reference/rb_transcriptome_indices_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the S3 url associated with the organism and length, along with other metadata about\nthe transcriptome index we have stored. — rb_transcriptome_indices_read","text":"id number Transcriptome Index Id eg 1 (required)","code":""},{"path":[]}]
